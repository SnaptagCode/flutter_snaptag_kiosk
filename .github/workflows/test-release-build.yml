name: Test Release Build (Windows)

on:
  push:
    tags:
      - 'test-v*' # test-v로 시작하는 태그에서 실행(실 버전에서는 v* 로)
  workflow_dispatch: # 수동 실행도 가능하게 설정

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/test-v')
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Visual Studio Build Tools if Missing & Copy VC++ Redistributable
        run: |
          $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"

          if (-Not (Test-Path $vswherePath)) {
              Write-Output "Visual Studio is not installed! Installing Visual Studio Build Tools..."
              $vsInstallerUrl = "https://aka.ms/vs/17/release/vs_BuildTools.exe"
              $vsInstallerPath = "$env:TEMP\vs_BuildTools.exe"
              Invoke-WebRequest -Uri $vsInstallerUrl -OutFile $vsInstallerPath
              Start-Process -FilePath $vsInstallerPath -ArgumentList "--quiet --wait --norestart --nocache --installPath C:\BuildTools --add Microsoft.VisualStudio.Workload.VCTools" -NoNewWindow -Wait
              Write-Output "Visual Studio Build Tools installation completed!"
          }

          if (Test-Path $vswherePath) {
              $vsInstallPath = & $vswherePath -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
              if ($vsInstallPath) {
                  Write-Output "✅ Found Visual Studio installation at: $vsInstallPath"
                  $vcRedistPath = "$vsInstallPath\VC\Redist\MSVC"

                  # 가장 최신 버전 폴더를 찾기
                  $latestRedistVersion = Get-ChildItem -Directory -Path $vcRedistPath | Sort-Object Name -Descending | Select-Object -First 1
                  if ($latestRedistVersion) {
                      $latestRedistPath = Join-Path -Path $vcRedistPath -ChildPath "$($latestRedistVersion.Name)\x64"

                      # Microsoft.VCxxx.CRT 폴더 찾기
                      $crtFolder = Get-ChildItem -Directory -Path $latestRedistPath | Where-Object { $_.Name -match "^Microsoft\.VC\d+\.CRT$" } | Select-Object -First 1

                      if ($crtFolder) {
                          $fullCrtPath = Join-Path -Path $latestRedistPath -ChildPath $crtFolder.Name
                          Write-Output "📂 Found CRT folder: $fullCrtPath"

                          # DLL 파일이 실제로 존재하는지 확인
                          $dllFiles = Get-ChildItem -Path $fullCrtPath -Filter "*.dll"
                          if ($dllFiles.Count -gt 0) {
                              Write-Output "✅ Copying VC++ Redistributable DLLs from: $fullCrtPath"
                              Copy-Item -Path "$fullCrtPath\*" -Destination "build/windows/x64/runner/Release" -Force
                          } else {
                              Write-Output "⚠️ Warning: No DLL files found in $fullCrtPath"
                          }
                      } else {
                          Write-Output "⚠️ Warning: No 'Microsoft.VCxxx.CRT' folder found in $latestRedistPath"
                      }
                  } else {
                      Write-Output "⚠️ Warning: No Redistributable versions found in $vcRedistPath"
                  }
              } else {
                  Write-Output "❌ Error: Visual Studio installation not found after installation!"
              }
          } else {
              Write-Output "❌ Error: vswhere.exe not found! Visual Studio installation might have failed."
          }
        shell: pwsh

      - name: Archive Build
        run: Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath test_release.zip

      - name: Upload Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: test_release.zip
          body: "Automated test release build for Windows."
          tag_name: ${{ github.ref_name }}
          name: "Test Release - ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}